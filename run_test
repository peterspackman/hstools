#!/bin/bash
PROG=~/phd/sclcc
TEST_DIR=~/phd/test
SURFACE=$TEST_DIR/test.surface
SURFACENR=$TEST_DIR/test-nr.surface
SURFACENROI=$TEST_DIR/test-nr-oi.surface
HISTSP=$TEST_DIR/test.hist
HISTKT=$TEST_DIR/test-kt.hist
HISTHD=$TEST_DIR/test-hd.hist
TMP=$TEST_DIR/test.tmp
REDIRECT=
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
YELLOW=$(tput setaf 3)
NORMAL=$(tput sgr0)
col=20
NPASSED=0
NTESTS=6
T="$(date +%s)"

function print_header {
  printf " %s" $BLUE
  for i in `seq 73`; do
    printf "*"
  done
  printf "%s" $NORMAL
}

function test_files {
  diff --brief $1 $2 > /dev/null
  cmp=$?
  if [ $cmp -eq 1 ]
  then
    printf "%s%s%s" "$RED" "[FAIL]" "$NORMAL"
    print_header
    printf "\n"
  else
    printf "%s%s%s" "$GREEN" "[PASS]" "$NORMAL"
    print_header
    printf "\n"
    ((NPASSED++))
  fi
}

function test_arrays {
  python3 test/check_arrays.py $1 $2 > /dev/null
  cmp=$?
  if [ $cmp -eq 1 ]
  then
    printf "%s%s%s" "$RED" "[FAIL]" "$NORMAL"
    print_header
    printf "\n"
  else
    printf "%s%s%s" "$GREEN" "[PASS]" "$NORMAL"
    print_header
    printf "\n"
    ((NPASSED++))
  fi

}

function print_descr {
  padding=80
  printf "%s[TEST] %s $1 " $YELLOW
  len=`expr $padding - ${#1} - 9`
  printf $BLUE
  for i in `seq $len`; do
    printf "*"
  done
  printf $NORMAL
  printf "\n"
}

touch $TMP

print_descr "surface --batch (default)"
$PROG surface --batch $TEST_DIR -o $TMP --silent
test_files $TMP $SURFACE
print_descr "surface --batch --no-restrict"
$PROG surface --batch $TEST_DIR -o $TMP --no-restrict --silent
test_files $TMP $SURFACENR
print_descr "surface --batch --norestrict --order-important"
$PROG surface --batch $TEST_DIR -o $TMP --no-restrict --order-important --silent
test_files $TMP $SURFACENROI
print_descr "hist --batch (spearman_roc)"
$PROG hist --batch $TEST_DIR -o $TMP --silent
test_arrays $TMP $HISTSP
print_descr "hist --batch (kendall_tau)"
$PROG hist --batch $TEST_DIR -tkt -o $TMP --silent
test_arrays $TMP $HISTKT
print_descr "hist --batch (hdistance)"
$PROG hist --batch $TEST_DIR -thd -o $TMP --silent
test_arrays $TMP $HISTHD
if [ $NPASSED -eq $NTESTS ]; then
  printf "%s[ALL TESTS PASSED]%s" $GREEN $NORMAL
else
  printf "%s[%d OF %d TESTS PASSED]%s" $RED $NPASSED $NTESTS $NORMAL
fi
T="$(($(date +%s)-T))"
printf " in ${T} seconds\n"
rm -f $TMP

