#!/usr/bin/python
"""Usage:
    sclcc hist (--batch <dir> | <file>) [options]
    sclcc surface (--batch <dir> | <file>) [options]
    sclcc harmonics (--batch <dir> | <file>) [options]
    sclcc (--version | --help | -h)

Simple Command-Line Computational Chemistry (SCLCC)

This program deals primarily with the histograms or 'fingerprints' generated
from the hirshfeld surfaces of various molecular crystals generated by tonto.

In addition this program can:

* Perform clustering on the generated fingerprints (using hist with --batch)
* Generate and output the percentage contribution to hirshfeld surface from
various elements. (using surface command)

Options:
    -h, --help                     Show this help message and exit.
    --version                      Show program's version number and exit.
    -b=NUM, --bins=NUM             Set the number of bins to use
                                   in the histogram. [default: 100]
    -t=TEST, --test=TEST           Select which test will be used.
                                   [default: sp]
    -p, --save-figures             Plot histograms calculated and
                                   save them to file.
    -n=N, --procs=N                The number of processes to parse
                                   files with. [default: 4]
    -i=ATOM, --internal-atom=ATOM  Restrict the closest internal atom
                                   in the histogram
    -e=ATOM, --external-atom=ATOM  Restrict the closest external atom
                                   in the histogram
    -j=FILE, --json=FILE           Dump the dendrogram tree to JSON

    --no-restrict                  Don't restrict the surface area
                                   values to only those closer than
                                   Van Der Waal's Radii
    --order-important              When classifying surface area,
                                   indicate that H -> O is different
                                   to O -> H. (i.e. order is important)
    -o=FILE, --output=FILE         Write the result to a given file.
                                   Works for both surface and hist modes.
                                   Will save the distance matrix in hist mode,
                                   and write S.A. infor in surface mode
    -d=FILE, --dendrogram=FILE     Save the the generated clustering as a
                                   dendrogram.
    -s, --silent                   Do not print output to stdout/stderr
    -m=METHOD, --method=METHOD     Use METHOD when calculating linkage. One of
                                   'average', 'single', 'complete', 'weighted',
                                   'centroid', 'median', 'ward'.
                                   [default: complete]
    --distance=THRESHOLD           The threshold distance for leaves to be
                                   classified as clustered. Unlikely to change
                                   much. [default: 0.4]
"""

# Core imports
# Library imports
from docopt import docopt
# Local imports
import data
import modes

version = "0.3"
args = docopt(__doc__, version=version)
# *******        MAIN PROGRAM           ****** #


def main():
    """
    This program currently rounds distance matrices to 5 d.p.
    due to floating point arithmetic problems!!'
    """
    if args['--silent']:
        data.silent = True
    # Process histograms
    if args['hist']:
        modes.hist_main(args)

    if args['harmonics']:
        modes.harmonics_main(args)

    # Process surface area statistics
    if args['surface']:
        modes.surface_main(args)



if __name__ == '__main__':
    main()
